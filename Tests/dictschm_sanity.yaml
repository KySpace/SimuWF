# Verify whether the energy and time scale is consistent in our algorithm
# freq_recoil = E_R'/h = 16.3 kHz
# depth_latt = 2.78 
# Based on the freshly calculated geometry
Varying :
    sz_init     : [3]
    freq_dipl_long : [200]
    mu_init     : ["[10 0 0]", "[0 0 10]"]
    tau_R : [0.0613] 
    ntrc        : [0]
# Units 
#   length : μm
#   k-vector : 2^pi/μm
#   absolute time, τ_R : ms
#   t_rel : tau_R
#   Energy : E_R
#   Recoild Energy E_R = h^2 / (2 * 2m_Li) / lam_Latt^2 = 9.707E-30
#   shaking frequency corresponding to 4E_R: ν_sh_0 = 4 * E_R / h = 58.6 kHz
#   Time for a complete phase rotate at E_R, tau_R = h / E_R = 6.8261e-02 ms
Passive : 
  lmd_Dip     : 1.064
  k_R         : 2 * pi / lmd_Dip 
  k_L         : 2 * k_R
  tau_R       : 6.8261E-2;
  z_R         : 50
  dt_rel      : 0.02
  dt_abs      : dt_rel * tau_R
  calctime    : "@(j) j * dt_abs"
  iter_max    : 6000
  dr          : lmd_Dip / 2 * [1, 4, 1]
  halfsz      : "[100 10 100].*dr"
  vel_rec     : 2 * lmd_Dip / tau_R * 1000 # μm / s
  pttl_elongation : 1
  freq_dipl_long : 200
  freq_dipl_trsv : freq_dipl_long * pttl_elongation
  deg_dipl    : 0
  freq_shake_rel : 64/4*tau_R
  pttl_gen    : mkpttl1(vel_rec, freq_dipl_trsv, freq_dipl_long, deg_dipl)
  pttl_gen_pre: mkpttl1(vel_rec, freq_dipl_trsv, freq_dipl_long, deg_dipl)
  dsps_gen    : dspsposmass(1, k_L)
  ntrc_gen    : const(ntrc)
  mu_init     : "[50,0,0]"
  wf_ini_gen  : wfinigauss(mu_init, sz_init)
  # ---- Saving Key Frames
  sz          : size(halfsz)  
  # halfsz    same as above   
  # dr        same as above          
  timestamps  : "0"
  savename_setter   : "@(i) \"frame_\" + num2str(i) + \".mat\" "